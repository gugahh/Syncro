Backlog do Projeto Syncro
=============================
1. Tratar o erro em subtitleMillisString, que não lança uma excessão tratada
   quando o "timestamp" de uma legenda não corresponde a uma marcação de tempo
   (exemplo: monk.srt). (OK)

1.1. Permitir o formato de "data" em segundos (ex: +1s / -3s), que nunca foi implementado. (OK em 11/09/25)

2. Permitir que o formato em segundos tenha valores fracionários (ex: +3,5s). (OK em 11/09/25)

2.1 Criar testes unitarios para a classe SubtitleUtil (despriorizado).

3. Criar validadores (classes específicas) para os formatos de ajuste (+00:00:01s / +01s). (OK em 11/09/25)

4. Refatorar o codigo para facilitar "instalar" novos modos (OK em 11/09/25)
    - cada modo deve ter seu proprio arquivo independente de rotinas. (OK em 11/09/25)
    - Uma classe principal escolhe entre um modo ou outro, e repassa os parametros. (OK em 11/09/25)
    - As rotinas de cado modo incluem validação de seus parâmetros. (OK em 11/09/25)

5. Criar o modo "copyCat": (OK em 13/09/2025)
    - param: legenda de exemplo
    - param: posição inicial da legenda de exemplo (ex: Legenda 15)
    - param: posição final da legenda de exemplo (ex: Legenda 90)
    - param: legenda de destino
    - param: posição inicial da legenda de destino (ex: Legenda 21)
    - Lançar erro caso as legenda de destino seja menor do que a de origem
        (ex: especificar "exemplo" de legenda de 15 a 30;
        "destino" também começando em 15, mas não existe a legenda 30 em destino).

6. Forçar conversão de ANSI para UTF-8. Caso já seja UTF-8, não fazer nada (despriorizado).
    (se possível, fazer a conversão automaticamente).

7. Criar o modo proporcional "proportional" (caso o CopyCat não resolva) (despriorizado).
    - Informar legenda de início (obrigatória. Ex: 15)
    - Informar legenda de término (obrigatória; Ex: 39)
    - Informar a hora real da legenda de término (ex: 01:20:39s)
    - Todas as legendas entre a legenda 15 e a 39 serão ajustadas proporcionalmente,
      recebendo a última (a 39), 100% do ajuste de tempo, e a primeira (a 15), 0% de ajuste.
    - Legendas após a legenda de término (ex: 40 em diante), todas receberão 100% de ajuste.

8. Criar o modo "split", para quebrar uma legenda em N outras, de modo a facilitar (OK em 11/09/25)
   a traducao dos pedacoes utilizando uma IA gratuita.
   Ex: monk.srt  ---> ( monk_001.srt, monk_002.srt, monk_003.srt )

9. Criar o modo "concat", para reunir diversas legendas em uma, util  (OK em 15/09/2025)
   para o caso de traducao via IA.
   Ex: ( monk_001.srt, monk_002.srt, monk_003.srt ) --> monk.srt

10. Criar o modo "validate", pra analisar se legendas criadas por outros estão corretas.
    - Copia para a memória todas as legendas (como no resto das actions).
    - Copia os índices das legendas também para os objetos Subtitle, como texto (isso hoje não acontece).
      (este dado vai ficar dentro do Subtitle).
    - Cria uma lista correlacionando cada subtitle com a sua linha correspondente no arquivo original
      (isso também não é feito, hoje - dado também vai ficar dentro do Subtitle).
    - Loga quais índices / números de linha possuem linhas demais de texto (ex: 4 linhas) (Warning)
    - Loga quais números de linha possuem a palavra "truncate" (Warning)
    - Loga quais legendas possuem seus índices originais na máscara [xx - xx] (caso de Erro).
    - Avisa de possíveis saltos na numeração original (Warning).
    - Avisa sobre repetição de linhas 3 vezes ou mais (Warning).
    - Avisa sobre caracteres estranhos, como { (Warning. Normalmente, é erro).

11. Melhoria em SubtitleUtil (PRIORITARIA)
    - Trocar:
        Subtitle(int id, String startTime, String endTime) por
        Subtitle(int id, int startTime, int endTime) ou similar.
      A responsabilidade por converter timestamps de legendas não deveria estar em Subtitle.
      Isso dificulta o controle de erros, visto que Subtitle não sabe a linha da legenda que está sendo
      processada.
      Subtitle é um VO e não deve lançar excessões.

12.  Melhorias no Help  (iniciado em 19/09/2025)
    - Cada modo deve possuir seu proprio arquivo de help (em progresso)
    - Criar help para os modos novos
    - Melhorar a exibicao do help de forma paginada. Sugestoes:
        - Exibir as linhas mais lentamente, usando Thread.wait();
        - Exibir "aperte qualquer tecla para prosseguir ou X para sair da ajuda."
        - A cada tela, limpar a tela e exibir de novo (rapidamente) todos os trechos
          do help já exibidos, para fazer com que o texto não tenha
          o "aperte qualquer tecla" no meio dele.
        - Descobrir de antemão quantas linhas tem o terminal atual.
        - Descobrir como fazer o terminal exibir mensagens usando UTF-8
        - Acentuar os arquivos de help (depende do UTF-8).